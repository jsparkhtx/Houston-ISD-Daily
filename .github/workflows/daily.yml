name: Daily Build

on:
  workflow_dispatch:
  schedule:
    - cron: "0 10 * * *"   # 5:00 AM CT (CDT)
    - cron: "0 11 * * *"   # 5:00 AM CT (CST)

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Configure timezone
        run: sudo timedatectl set-timezone America/Chicago

      - name: Run pipeline (WITH TTS)
        env:
          TZ: America/Chicago
          # --- TTS (AWS Polly) ---
          TTS_PROVIDER: polly
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          POLLY_VOICE_ID: ${{ secrets.POLLY_VOICE_ID }}    # e.g., Joanna, Matthew, Lupe
          POLLY_ENGINE: ${{ secrets.POLLY_ENGINE }}        # standard or neural (optional)
          POLLY_OUTPUT_FORMAT: mp3
          # --- Podcast metadata ---
          PODCAST_TITLE: ${{ secrets.PODCAST_TITLE }}
          PODCAST_AUTHOR: ${{ secrets.PODCAST_AUTHOR }}
          PODCAST_EMAIL: ${{ secrets.PODCAST_EMAIL }}
          PODCAST_DESCRIPTION: ${{ secrets.PODCAST_DESCRIPTION }}
          PODCAST_LINK: ${{ secrets.PODCAST_LINK }}        # e.g., https://jsparkhtx.github.io/Houston-ISD-Daily
          PODCAST_ART_URL: ${{ secrets.PODCAST_ART_URL }}
        run: |
          python -m src.main --date today

      - name: Stage public site
        run: |
          rm -rf public
          mkdir -p public/episodes
          cp -R data/episodes/* public/episodes/ || true
          cp data/feed/podcast.xml public/

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
